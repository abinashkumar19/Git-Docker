- name: Deploy on EC2
  uses: appleboy/ssh-action@v0.1.7
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ${{ secrets.EC2_USER }}
    key: ${{ secrets.EC2_KEY }}
    envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION
    script: |
      set -e
      echo "ğŸ”¹ Updating EC2 instance..."
      sudo apt-get update -y || sudo yum update -y

      echo "ğŸ”¹ Installing Docker if missing..."
      if ! command -v docker &> /dev/null
      then
        sudo apt-get install -y docker.io || sudo yum install -y docker
        sudo systemctl start docker
        sudo systemctl enable docker
      fi

      echo "ğŸ”¹ Installing AWS CLI if missing..."
      if ! command -v aws &> /dev/null
      then
        sudo apt-get install -y awscli || sudo yum install -y awscli
      fi

      echo "ğŸ”¹ Configuring AWS credentials..."
      mkdir -p ~/.aws
      cat > ~/.aws/credentials <<EOF
      [default]
      aws_access_key_id=${AWS_ACCESS_KEY_ID}
      aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
      region=${AWS_REGION}
      EOF

      echo "ğŸ”¹ Logging into ECR..."
      aws ecr get-login-password --region $AWS_REGION \
        | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

      echo "ğŸ”¹ Pulling latest image..."
      docker pull ${{ steps.login-ecr.outputs.registry }}/myapp-repo:latest

      echo "ğŸ”¹ Stopping old container (if any)..."
      docker stop myapp || true
      docker rm myapp || true

      echo "ğŸ”¹ Running new container..."
      docker run -d --name myapp -p 80:80 ${{ steps.login-ecr.outputs.registry }}/myapp-repo:latest

      echo "ğŸ”¹ Deployment complete. Current containers:"
      docker ps -a
