name: Deploy to EC2 with Docker & ECR

on:
push:
branches:
- main

jobs:
deploy:
runs-on: ubuntu-latest

```
steps:
  - name: Checkout repo
    uses: actions/checkout@v3

  - name: Debug - List repo files
    run: |
      pwd
      ls -R

  - name: Configure AWS credentials (for GitHub runner only)
    uses: aws-actions/configure-aws-credentials@v4
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: ${{ secrets.AWS_REGION }}

  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v2

  - name: Ensure ECR repository exists
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    run: |
      aws ecr describe-repositories \
        --repository-names myapp-repo \
        --region $AWS_REGION || \
      aws ecr create-repository \
        --repository-name myapp-repo \
        --region $AWS_REGION

  - name: Build, Tag, and Push image
    env:
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      ECR_REPOSITORY: myapp-repo
      IMAGE_TAG: latest
    run: |
      docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./frontend-app
      docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  - name: Deploy on EC2
    uses: appleboy/ssh-action@v0.1.7
    with:
      host: ${{ secrets.EC2_HOST }}
      username: ec2-user
      key: ${{ secrets.EC2_KEY }}
      script: |
        set -e
        echo "ðŸ”¹ Updating EC2 instance..."
        sudo yum update -y || sudo dnf update -y

        echo "ðŸ”¹ Installing Docker if missing..."
        if ! command -v docker &> /dev/null
        then
          sudo yum install -y docker || sudo dnf install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker ec2-user
        fi

        echo "ðŸ”¹ Installing AWS CLI if missing..."
        if ! command -v aws &> /dev/null
        then
          sudo yum install -y awscli || sudo dnf install -y awscli
        fi

        echo "ðŸ”¹ Logging into ECR (using IAM Role)..."
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

        echo "ðŸ”¹ Pulling latest image..."
        docker pull ${{ steps.login-ecr.outputs.registry }}/myapp-repo:latest

        echo "ðŸ”¹ Stopping old container..."
        docker stop myapp || true
        docker rm myapp || true

        echo "ðŸ”¹ Running new container..."
        docker run -d --name myapp -p 80:80 ${{ steps.login-ecr.outputs.registry }}/myapp-repo:latest

        echo "ðŸ”¹ Deployment complete."
        docker ps -a
```
